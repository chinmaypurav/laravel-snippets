{
    "Php public function": {
        "prefix": "phpFunc",
        "body": [
            "public function ${1:name}(${2:arguments})\n{",
            "    ${3://the body of the function}",
            "}"
        ],
        "description": "Generates a public function boilerplate"
    },
    "Php private function": {
        "prefix": "phpPrivate",
        "body": [
            "private function ${1:name}(${2:arguments})\n{",
            "    ${3://the body of the function}",
            "}"
        ],
        "description": "Generates a private function boilerplate"
    },
    "A hasOne relationship function": {
        "prefix": "hasOne",
        "body": [
            "public function ${1:name}()\n{",
            "    return \\$this->hasOne(${2:class})${3};",
            "}"
        ],
        "description": "Generates a hasOne relationship function"
    },
    "A belongsTo relationship function": {
        "prefix": "belongsTo",
        "body": [
            "public function ${1:name}()\n{",
            "    return \\$this->belongsTo(${2:class})${3};",
            "}"
        ],
        "description": "Generates a belongsTo relationship function"
    },
    "A hasMany relationship function": {
        "prefix": "hasMany",
        "body": [
            "public function ${1:name}()\n{",
            "    return \\$this->hasMany(${2:class})${3};",
            "}"
        ],
        "description": "Generates a hasMany relationship function"
    },
    "A BelongsToMany relationship function": {
        "prefix": "belongsToMany",
        "body": [
            "public function ${1:name}()\n{",
            "    return \\$this->belongsToMany(${2:class})${3};",
            "}"
        ],
        "description": "Generates a belongsToMany relationship function"
    },
    "A HasManyThrough relationship function": {
        "prefix": "hasManyThrough",
        "body": [
            "public function ${1:name}()\n{",
            "    return \\$this->hasManyThrough(${2:relatedClass}, ${3:throughClass})${4};",
            "}"
        ],
        "description": "Generates a hasManyThrough relationship function"
    },
    "A HasOneThrough relationship function": {
        "prefix": "hasOneThrough",
        "body": [
            "public function ${1:name}()\n{",
            "    return \\$this->hasOneThrough(${2:relatedClass}, ${3:throughClass})${4};",
            "}"
        ],
        "description": "Generates a hasOneThrough relationship function"
    }
}